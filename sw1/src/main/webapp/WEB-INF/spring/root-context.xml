<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<context:component-scan base-package="org.thinker.config"></context:component-scan>

    <context:component-scan base-package="org.thinker.member.**"></context:component-scan>
    
    <!-- 스프링에서 관리하게됨. -->
    <context:component-scan base-package="org.thinker.txex.**"></context:component-scan>
    
    

	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	

	
	<bean id="sampleAOP" class="org.thinker.aop.SampleAOP"></bean>
	

	
	<bean id="dataSource"  class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	  <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
	  <property name="url" value="jdbc:oracle:thin:@thinker.ipdisk.co.kr:1521:orcl" />
	  <property name="username" value="user00" />
	  <property name="password" value="rkddycjs" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  	  <property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  	  <property name="dataSource" ref="dataSource" />
    </bean>
    
    
    
<!--     <tx:advice id="txAdvice" transaction-manager="transactionManager"> -->
<!--    	손대지마 그냥 자연스럽게 이해해. 얘는 메소드 이름만 가지고 설정하는거 -->
<!--     	<tx:attributes> -->
<!--     		<tx:method name="get*" read-only="true" rollback-for="Exception"/> -->
<!--     		<tx:method name="*" /> -->
<!--     	</tx:attributes> -->
<!-- 	</tx:advice> -->
	
<!--  	설정하는거라 같은 .xml에서 aop:config 여러가 나와도 됨. -->
<!-- 	<aop:config> -->
<!-- 		<aop:pointcut expression="execution(* org.thinker.txex.service.*.*(..))" id="txPointcut"/> -->
<!-- 		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>	 -->
<!-- 	</aop:config> -->
    
    
    <!-- .mapper로 끝나느 모든 패키지를 가져온다. -->
    <mybatis-spring:scan base-package="org.thinker.**.mapper"/>
    
<!--     <aop:config> -->
<!-- 	<aop:pointcut id="logPointcut" expression="execution(* org.thinker.**.service.*.*(..))"/> -->
<!-- 	<aop:aspect id="logAspect" ref="sampleLogger"> -->
<!-- 		<aop:around method="log" pointcut-ref="logPointcut" /> -->
<!-- 	</aop:aspect> -->
<!-- 	</aop:config> -->
    
    
    <!-- 트랜잭션 어노테이션으로 하고 싶을때 꼭 이 설정을 해줘야 한다. -->
    <tx:annotation-driven/>
    		
</beans>




